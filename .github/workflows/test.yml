name: Test

on:
  pull_request:
  workflow_dispatch:

jobs:
  test:
    name: ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            use-cross: false

          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            use-cross: false

          - os: ubuntu-latest
            target: arm-unknown-linux-gnueabihf
            use-cross: true

          - os: windows-latest
            target: x86_64-pc-windows-gnu
            use-cross: false

          - os: windows-latest
            target: x86_64-pc-windows-msvc
            use-cross: false

          - os: macos-latest
            target: x86_64-apple-darwin
            use-cross: false

          - os: macos-latest
            target: aarch64-apple-darwin
            use-cross: false

          - os: ubuntu-latest
            target: aarch64-unknown-linux-musl
            use-cross: true

          - os: ubuntu-latest
            target: armv7-unknown-linux-gnueabihf
            use-cross: true

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 1

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}

    - name: Setup native compilation
      if: ${{ matrix.use-cross == false }}
      shell: bash
      run: |
        echo "CARGO=cargo" >> $GITHUB_ENV

    - name: Install Cross
      if: ${{ matrix.use-cross == true }}
      shell: bash
      run: |
        dir="$RUNNER_TEMP/cross-download"
        mkdir "$dir"
        echo "$dir" >> $GITHUB_PATH
        cd "$dir"
        curl -LO "https://github.com/cross-rs/cross/releases/download/v0.2.5/cross-x86_64-unknown-linux-musl.tar.gz"
        tar xf cross-x86_64-unknown-linux-musl.tar.gz
        echo "CARGO=cross" >> $GITHUB_ENV
        echo "RUSTFLAGS=--cfg sd_cross_compile" >> $GITHUB_ENV
        echo "TARGET_DIR=./target/${{ matrix.target }}" >> $GITHUB_ENV

    - name: Test
      shell: bash
      run: |
        $CARGO --version
          # For legal reasons, cross doesn't support Apple Silicon. See this:
          # https://github.com/cross-rs/cross-toolchains#darwin-targets
          # It builds and runs fine, but there's no easy way to test it in CI
        if [ "${{ matrix.target }}" = "aarch64-apple-darwin" ]; then
          $CARGO build --target ${{ matrix.target }}
        else
          $CARGO test --target ${{ matrix.target }}
        fi
